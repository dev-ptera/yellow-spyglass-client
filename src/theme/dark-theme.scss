@use 'node_modules/@brightlayer-ui/colors/palette' as blui;
@use 'node_modules/@brightlayer-ui/colors-branding/palette' as branding;
@use 'node_modules/@angular/material' as mat;

@use 'node_modules/@brightlayer-ui/angular-themes/blui-component-theme' as blui-components-theme;
@use 'node_modules/@brightlayer-ui/angular-themes/darkTheme' as blui-dark;
@use 'node_modules/@brightlayer-ui/angular-themes/fonts' as blui-fonts;
@use 'node_modules/@brightlayer-ui/angular-themes/common' as blui-common;

@use './typography' as appTypography;
@use 'src/app/pages/representatives/representatives.component' as representatives;
@use 'src/app/pages/network/network.component' as network;

@mixin navigationBar($foreground) {
    .navigation-app-bar {
        .navigation-toolbar-title,
        .mat-button,
        .nav-menu-trigger {
            color: map-get($foreground, text);
        }
    }
    .mat-drawer-backdrop.mat-drawer-shown {
        background-color: rgb(62 63 62 / 67%);
    }
    .mat-drawer-container {
        background-color: #13181b;
    }
    .app-search-bar-input {
        background-color: unset;
        color: map-get($foreground, text);
    }
    .navigation-app-bar {
        .navigation-toolbar-title,
        .mat-button,
        .nav-menu-trigger {
            color: map-get($foreground, text);
        }
        .mat-button,
        .nav-menu-trigger {
            &.active {
                border-bottom: solid 2px map-get($foreground, text);
                border-bottom-right-radius: 0;
                border-bottom-left-radius: 0;
            }
        }
    }
}

@mixin homePage($foreground) {
    .home-header-text {
        color: map-get(blui.$blui-white, 50);
    }
    .home-body {
        .app-search-bar-input {
            background: #0b0e10;
        }
        .home-header-container {
            border-bottom: solid 1px map-get($foreground, divider);
            &.sm {
                border-bottom: 0;
            }
        }
        $placeholderTextColor: map-get($foreground, text);
        ::placeholder {
            /* Chrome, Firefox, Opera, Safari 10.1+ */
            color: $placeholderTextColor;
            opacity: 1; /* Firefox */
        }

        :-ms-input-placeholder {
            /* Internet Explorer 10-11 */
            color: $placeholderTextColor;
        }

        ::-ms-input-placeholder {
            /* Microsoft Edge */
            color: $placeholderTextColor;
        }
        .mat-flat-button.mat-primary.mat-button-disabled {
            background-color: map-get(blui.$blui-vantaBlack, 100);
        }
        background-color: map-get(blui.$blui-vantaBlack, 500);
        .mat-icon {
            color: map-get(blui.$blui-gray, 500);
        }
        .desc {
            color: map-get($foreground, secondary-text);
        }
        .title {
            color: map-get($foreground, secondary-text);
        }
        .stronger {
            color: map-get($foreground, text);
        }
        .summary-text {
            color: map-get($foreground, secondary-text);
        }
    }
    .home-summary-cards-container .icon-container {
        background: map-get(blui.$blui-black, 900);
    }
}

@mixin accountPage($foreground, $background, $primary, $warn) {
    .tab-buttons button {
        color: map-get($foreground, secondary-text) !important;
        background-color: map-get(blui.$blui-black, 900) !important;
        border-color: map-get($foreground, divider);
    }
    .tab-buttons .active {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
        border-bottom: solid 2px $primary;
        color: $primary !important;
    }
    .account-header {
        //  background-color: map-get($background, card);
    }
    .tx-content-container {
        background-color: map-get(blui.$blui-black, 900);
    }
    .account-rep-offline {
        background-color: $warn;
    }
    .tab-transaction-list,
    .brpd-tab-transaction-list {
        .type {
            &.receive {
                background-color: rgba($primary, 0.05);
                border: solid 1px $primary;
                color: $primary;
                // color: map-get($foreground, secondary-text);
            }
            &.send {
                background-color: rgba($warn, 0.05);
                border: solid 1px $warn;
                color: $warn;
            }
            &.change {
                $change: map-get(blui.$blui-blue, 200);
                background-color: rgba($change, 0.05);
                border: solid 1px $change;
                color: $change;
            }
            &.receivable {
                $receivable: map-get(blui.$blui-orange, 200);
                background-color: rgba($receivable, 0.05);
                border: solid 1px $receivable;
                color: $receivable;
            }
            &.open {
                $open: map-get(blui.$blui-purple, 200);
                background-color: rgba($open, 0.05);
                border: solid 1px $open;
                color: $open;
            }
        }
    }
}

@mixin highcharts($theme-foreground) {
    .highcharts-data-label text {
        fill: map-get($theme-foreground, text) !important;
        font-weight: 400 !important;
    }

    .highcharts-legend-item text {
        fill: map-get($theme-foreground, secondary-text) !important;
    }

    .highcharts-reset-zoom text {
        fill: map-get($theme-foreground, secondary-text) !important;
    }

    .insights-chart {
        $fill: rgb(19, 24, 27) !important;
        .highcharts-container {
            .highcharts-background {
                fill: #1d2529bd;
            }
        }
    }
}

$material-theme-primary: mat.define-palette(blui.$blui-green, 200);
$material-theme-accent: mat.define-palette(blui.$blui-yellow, 500);
$material-theme-warn: mat.define-palette(blui.$blui-red, 500);

$dark-theme: map-merge(
    mat.define-dark-theme($material-theme-primary, $material-theme-accent, $material-theme-warn),
    (
        foreground: (
            text: map-get(blui.$blui-black, 50),
            secondary-text: map-get(blui.$blui-black, 200),
            hint-text: map-get(blui.$blui-black, 400),
            base: map-get(blui.$blui-white, 100),
            divider: rgba(map-get(blui.$blui-black, 300), 0.2),
            dividers: rgba(map-get(blui.$blui-black, 300), 0.2),
            disabled: rgba(map-get(blui.$blui-black, 300), 0.2),
            disabled-button: rgba(white, 0.3),
            disabled-text: rgba(map-get(blui.$blui-black, 300), 0.2),
            elevation: map-get(blui.$blui-darkBlack, 900),
            icon: map-get(blui.$blui-black, 100),
            icons: map-get(blui.$blui-black, 100),
            slider-min: map-get(blui.$blui-black, 100),
            slider-off: rgba(white, 0.3),
            slider-off-active: rgba(white, 0.3),
        ),
        background: (
            status-bar: map-get(blui.$blui-darkBlack, 900),
            app-bar: map-get(blui.$blui-darkBlack, 100),
            background: map-get(blui.$blui-darkBlack, 50),
            hover: rgba(white, 0.04),
            card: rgba(map-get(blui.$blui-black, 900), 1),
            dialog: map-get(blui.$blui-black, 900),
            disabled-button: rgba(white, 0.12),
            raised-button: map-get(blui.$blui-black, 500),
            focused-button: mat.get-color-from-palette(mat.$dark-theme-background-palette, focused-button),
            selected-button: mat.get-color-from-palette(mat.$dark-theme-background-palette, selected-button),
            selected-disabled-button:
                mat.get-color-from-palette(mat.$dark-theme-background-palette, selected-disabled-button),
            disabled-button-toggle: black,
            unselected-chip: mat.get-color-from-palette(mat.$dark-theme-background-palette, unselected-chip),
            disabled-list-option: black,
        ),
    )
);

.dark {
    @include mat.all-component-themes($dark-theme);
    @include blui-components-theme.blui-components-theme($dark-theme);
    @include blui-dark.darktheme($dark-theme);
    @include blui-common.common();
    @include appTypography.typography();

    $theme-foreground: map-get($dark-theme, foreground);
    $theme-background: map-get($dark-theme, background);

    $primary: map-get($material-theme-primary, 200);
    $warn: map-get($material-theme-warn, 200);

    /** Common **/
    .sm {
        .mat-row:nth-child(even),
        .mat-row:nth-child(odd) {
            background-color: map-get(blui.$blui-darkBlack, 100);
        }
    }

    // BLUI Overrides:
    .mat-flat-button.mat-primary {
        background-color: $primary !important;
        color: map-get(blui.$blui-black, 900);
    }
    .mat-form-field.mat-primary:not(.mat-form-field-disabled).mat-form-field-appearance-fill
        .mat-form-field-flex
        + .mat-form-field-underline
        .mat-form-field-ripple {
        background-color: $primary !important;
    }
    .mat-mini-fab.mat-primary {
        background-color: $primary;
        color: map-get($theme-background, raised-button);
    }

    /** Alternating table row colors. */
    .mat-row:nth-child(even) {
        background-color: #192022;
    }
    .mat-row:nth-child(odd) {
        background-color: map-get(blui.$blui-black, 900);
    }
    .mat-toolbar.mat-primary {
        background-color: map-get(blui.$blui-darkBlack, 300) !important;
        border-bottom: solid 1px map-get($theme-foreground, divider);
    }
    .mat-drawer-content {
        background-color: #13181b !important;
    }
    .text {
        color: map-get($theme-foreground, text);
    }
    .text-secondary {
        color: map-get($theme-foreground, secondary-text);
    }
    .text-hint {
        color: map-get($theme-foreground, hint-text);
    }
    .primary {
        color: $primary;
    }
    .intermediary {
        color: map-get(blui.$blui-orange, 500);
    }
    .warn {
        color: $warn;
    }
    .divider-border {
        border: solid 1px rgba(map-get(blui.$blui-black, 300), 0.32);
        box-shadow: none !important;
    }
    .app-user-menu .blui-user-menu-avatar {
        color: map-get(blui.$blui-white, 50);
    }
    .principal-tag {
        font-weight: 600 !important;
        background-color: rgba($primary, 0.05);
        border: solid 1px $primary;
        color: $primary;
    }

    // Highlight normal input yellow border.
    textarea:focus,
    input:focus {
        border-radius: 4px;
        border: solid 2px map-get($material-theme-accent, 500);
        outline: 0;
    }

    // Placeholder loading (remove later)
    .ph-row div {
        background-color: #101010;
    }
    .ph-item:before {
        background: linear-gradient(to right, rgb(255 0 0 / 0%) 46%, rgb(29, 37, 41) 50%, rgba(255, 255, 255, 0) 54%)
            50% 50%;
    }

    .original-block-content {
        background-color: map-get(blui.$blui-black, 900);
    }

    $sticky-border-color: map-get($theme-foreground, divider);
    @include representatives.representatives-theme($sticky-border-color, #3b3b3b);
    @include accountPage($theme-foreground, $theme-background, $primary, $warn);
    @include network.network-theme($theme-foreground);
    @include highcharts($theme-foreground);
    @include navigationBar($theme-foreground);
    @include homePage($theme-foreground);
}
